;buildInfoPackage: chisel3, version: 3.4.3, scalaVersion: 2.12.12, sbtVersion: 1.3.10
circuit aw_decode : 
  module aw_channel_out_reg_slice : 
    input clock : Clock
    input reset : Reset
    output io : {dout : {flip ready : UInt<1>, valid : UInt<1>, bits : {aw : UInt<80>}}, flip din : {flip ready : UInt<1>, valid : UInt<1>, bits : {aw : UInt<80>}}}
    
    wire _data_WIRE : {aw : UInt<80>} @[DoCE.scala 13:34]
    _data_WIRE.aw <= UInt<80>("h00") @[DoCE.scala 13:34]
    reg data : {aw : UInt<80>}, clock with : (reset => (reset, _data_WIRE)) @[DoCE.scala 13:21]
    reg valid : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[DoCE.scala 14:22]
    node _T = not(io.dout.valid) @[DoCE.scala 15:24]
    node _T_1 = or(io.dout.ready, _T) @[DoCE.scala 15:22]
    when _T_1 : @[DoCE.scala 15:39]
      data.aw <= io.din.bits.aw @[DoCE.scala 16:10]
      valid <= io.din.valid @[DoCE.scala 17:11]
      skip @[DoCE.scala 15:39]
    node _io_din_ready_T = not(io.dout.valid) @[DoCE.scala 20:35]
    node _io_din_ready_T_1 = or(io.dout.ready, _io_din_ready_T) @[DoCE.scala 20:33]
    io.din.ready <= _io_din_ready_T_1 @[DoCE.scala 20:16]
    io.dout.valid <= valid @[DoCE.scala 21:17]
    io.dout.bits.aw <= data.aw @[DoCE.scala 22:16]
    
  module w_channel_out_reg_slice : 
    input clock : Clock
    input reset : Reset
    output io : {dout : {flip ready : UInt<1>, valid : UInt<1>, bits : {w : UInt<144>, last : UInt<1>}}, flip din : {flip ready : UInt<1>, valid : UInt<1>, bits : {w : UInt<144>, last : UInt<1>}}}
    
    wire _data_WIRE : {w : UInt<144>, last : UInt<1>} @[DoCE.scala 13:34]
    _data_WIRE.last <= UInt<1>("h00") @[DoCE.scala 13:34]
    _data_WIRE.w <= UInt<144>("h00") @[DoCE.scala 13:34]
    reg data : {w : UInt<144>, last : UInt<1>}, clock with : (reset => (reset, _data_WIRE)) @[DoCE.scala 13:21]
    reg valid : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[DoCE.scala 14:22]
    node _T = not(io.dout.valid) @[DoCE.scala 15:24]
    node _T_1 = or(io.dout.ready, _T) @[DoCE.scala 15:22]
    when _T_1 : @[DoCE.scala 15:39]
      data.last <= io.din.bits.last @[DoCE.scala 16:10]
      data.w <= io.din.bits.w @[DoCE.scala 16:10]
      valid <= io.din.valid @[DoCE.scala 17:11]
      skip @[DoCE.scala 15:39]
    node _io_din_ready_T = not(io.dout.valid) @[DoCE.scala 20:35]
    node _io_din_ready_T_1 = or(io.dout.ready, _io_din_ready_T) @[DoCE.scala 20:33]
    io.din.ready <= _io_din_ready_T_1 @[DoCE.scala 20:16]
    io.dout.valid <= valid @[DoCE.scala 21:17]
    io.dout.bits.last <= data.last @[DoCE.scala 22:16]
    io.dout.bits.w <= data.w @[DoCE.scala 22:16]
    
  module aw_decode : 
    input clock : Clock
    input reset : UInt<1>
    output io : {aw_channel : {flip ready : UInt<1>, valid : UInt<1>, bits : {aw : UInt<80>}}, w_channel : {flip ready : UInt<1>, valid : UInt<1>, bits : {w : UInt<144>, last : UInt<1>}}, flip din_channel : {flip ready : UInt<1>, valid : UInt<1>, bits : {din : UInt<128>, last : UInt<1>}}, flip phy_base_0 : UInt<49>, flip phy_base_1 : UInt<49>}
    
    reg bit_recv : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[DoCE.scala 157:25]
    reg bit_sent : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[DoCE.scala 158:25]
    inst aw_channel_out of aw_channel_out_reg_slice @[DoCE.scala 159:30]
    aw_channel_out.clock <= clock
    aw_channel_out.reset <= reset
    inst w_channel_out of w_channel_out_reg_slice @[DoCE.scala 162:29]
    w_channel_out.clock <= clock
    w_channel_out.reset <= reset
    wire _mid_WIRE : {w : UInt<128>, last : UInt<1>} @[DoCE.scala 166:33]
    _mid_WIRE.last <= UInt<1>("h00") @[DoCE.scala 166:33]
    _mid_WIRE.w <= UInt<128>("h00") @[DoCE.scala 166:33]
    reg mid : {w : UInt<128>, last : UInt<1>}, clock with : (reset => (reset, _mid_WIRE)) @[DoCE.scala 166:20]
    node _T = and(io.din_channel.ready, io.din_channel.valid) @[DoCE.scala 171:29]
    when _T : @[DoCE.scala 171:53]
      when io.din_channel.bits.last : @[DoCE.scala 172:35]
        bit_recv <= UInt<1>("h00") @[DoCE.scala 173:16]
        skip @[DoCE.scala 172:35]
      else : @[DoCE.scala 174:16]
        node _bit_recv_T = add(bit_recv, UInt<8>("h080")) @[DoCE.scala 175:28]
        node _bit_recv_T_1 = tail(_bit_recv_T, 1) @[DoCE.scala 175:28]
        bit_recv <= _bit_recv_T_1 @[DoCE.scala 175:16]
        skip @[DoCE.scala 174:16]
      skip @[DoCE.scala 171:53]
    node _T_1 = and(w_channel_out.io.din.valid, w_channel_out.io.din.ready) @[DoCE.scala 179:35]
    when _T_1 : @[DoCE.scala 179:65]
      when w_channel_out.io.din.bits.last : @[DoCE.scala 180:41]
        bit_sent <= UInt<1>("h00") @[DoCE.scala 181:16]
        skip @[DoCE.scala 180:41]
      else : @[DoCE.scala 182:16]
        node _bit_sent_T = add(bit_sent, UInt<8>("h090")) @[DoCE.scala 183:28]
        node _bit_sent_T_1 = tail(_bit_sent_T, 1) @[DoCE.scala 183:28]
        bit_sent <= _bit_sent_T_1 @[DoCE.scala 183:16]
        skip @[DoCE.scala 182:16]
      skip @[DoCE.scala 179:65]
    else : @[DoCE.scala 185:73]
      node _T_2 = and(aw_channel_out.io.din.valid, aw_channel_out.io.din.ready) @[DoCE.scala 185:42]
      when _T_2 : @[DoCE.scala 185:73]
        node _bit_sent_T_2 = add(bit_sent, UInt<8>("h080")) @[DoCE.scala 186:26]
        node _bit_sent_T_3 = tail(_bit_sent_T_2, 1) @[DoCE.scala 186:26]
        bit_sent <= _bit_sent_T_3 @[DoCE.scala 186:14]
        skip @[DoCE.scala 185:73]
    node _T_3 = and(io.din_channel.ready, io.din_channel.valid) @[DoCE.scala 189:29]
    when _T_3 : @[DoCE.scala 189:53]
      mid.w <= io.din_channel.bits.din @[DoCE.scala 190:11]
      mid.last <= io.din_channel.bits.last @[DoCE.scala 191:14]
      skip @[DoCE.scala 189:53]
    io.aw_channel.bits.aw <= aw_channel_out.io.dout.bits.aw @[DoCE.scala 194:17]
    io.aw_channel.valid <= aw_channel_out.io.dout.valid @[DoCE.scala 194:17]
    aw_channel_out.io.dout.ready <= io.aw_channel.ready @[DoCE.scala 194:17]
    io.w_channel.bits.last <= w_channel_out.io.dout.bits.last @[DoCE.scala 195:16]
    io.w_channel.bits.w <= w_channel_out.io.dout.bits.w @[DoCE.scala 195:16]
    io.w_channel.valid <= w_channel_out.io.dout.valid @[DoCE.scala 195:16]
    w_channel_out.io.dout.ready <= io.w_channel.ready @[DoCE.scala 195:16]
    io.din_channel.ready <= UInt<1>("h00") @[DoCE.scala 197:24]
    w_channel_out.io.din.valid <= UInt<1>("h00") @[DoCE.scala 198:30]
    w_channel_out.io.din.bits.w <= UInt<1>("h00") @[DoCE.scala 199:31]
    w_channel_out.io.din.bits.last <= UInt<1>("h00") @[DoCE.scala 200:34]
    aw_channel_out.io.din.valid <= UInt<1>("h00") @[DoCE.scala 201:31]
    node _left_T = sub(bit_recv, bit_sent) @[DoCE.scala 202:23]
    node left = tail(_left_T, 1) @[DoCE.scala 202:23]
    node _T_4 = eq(left, UInt<1>("h00")) @[DoCE.scala 205:15]
    when _T_4 : @[DoCE.scala 205:23]
      node _T_5 = eq(bit_sent, UInt<1>("h00")) @[DoCE.scala 207:23]
      node _T_6 = and(_T_5, io.din_channel.valid) @[DoCE.scala 207:31]
      when _T_6 : @[DoCE.scala 207:55]
        aw_channel_out.io.din.valid <= UInt<1>("h01") @[DoCE.scala 208:39]
        io.din_channel.ready <= aw_channel_out.io.din.ready @[DoCE.scala 209:32]
        skip @[DoCE.scala 207:55]
      else : @[DoCE.scala 210:41]
        when io.din_channel.valid : @[DoCE.scala 210:41]
          io.din_channel.ready <= UInt<1>("h01") @[DoCE.scala 211:32]
          skip @[DoCE.scala 210:41]
      skip @[DoCE.scala 205:23]
    node _T_7 = eq(left, UInt<5>("h010")) @[DoCE.scala 205:15]
    when _T_7 : @[DoCE.scala 205:23]
      when io.din_channel.valid : @[DoCE.scala 214:35]
        io.din_channel.ready <= w_channel_out.io.din.ready @[DoCE.scala 215:32]
        w_channel_out.io.din.valid <= UInt<1>("h01") @[DoCE.scala 216:38]
        node w_channel_out_io_din_bits_w_hi = bits(io.din_channel.bits.din, 127, 0) @[DoCE.scala 217:69]
        node w_channel_out_io_din_bits_w_lo = bits(mid.w, 127, 112) @[DoCE.scala 217:104]
        node _w_channel_out_io_din_bits_w_T = cat(w_channel_out_io_din_bits_w_hi, w_channel_out_io_din_bits_w_lo) @[Cat.scala 30:58]
        w_channel_out.io.din.bits.w <= _w_channel_out_io_din_bits_w_T @[DoCE.scala 217:39]
        w_channel_out.io.din.bits.last <= io.din_channel.bits.last @[DoCE.scala 218:42]
        skip @[DoCE.scala 214:35]
      skip @[DoCE.scala 205:23]
    node _T_8 = eq(left, UInt<6>("h020")) @[DoCE.scala 205:15]
    when _T_8 : @[DoCE.scala 205:23]
      when io.din_channel.valid : @[DoCE.scala 214:35]
        io.din_channel.ready <= w_channel_out.io.din.ready @[DoCE.scala 215:32]
        w_channel_out.io.din.valid <= UInt<1>("h01") @[DoCE.scala 216:38]
        node w_channel_out_io_din_bits_w_hi_1 = bits(io.din_channel.bits.din, 111, 0) @[DoCE.scala 217:69]
        node w_channel_out_io_din_bits_w_lo_1 = bits(mid.w, 127, 96) @[DoCE.scala 217:104]
        node _w_channel_out_io_din_bits_w_T_1 = cat(w_channel_out_io_din_bits_w_hi_1, w_channel_out_io_din_bits_w_lo_1) @[Cat.scala 30:58]
        w_channel_out.io.din.bits.w <= _w_channel_out_io_din_bits_w_T_1 @[DoCE.scala 217:39]
        w_channel_out.io.din.bits.last <= io.din_channel.bits.last @[DoCE.scala 218:42]
        skip @[DoCE.scala 214:35]
      skip @[DoCE.scala 205:23]
    node _T_9 = eq(left, UInt<6>("h030")) @[DoCE.scala 205:15]
    when _T_9 : @[DoCE.scala 205:23]
      when io.din_channel.valid : @[DoCE.scala 214:35]
        io.din_channel.ready <= w_channel_out.io.din.ready @[DoCE.scala 215:32]
        w_channel_out.io.din.valid <= UInt<1>("h01") @[DoCE.scala 216:38]
        node w_channel_out_io_din_bits_w_hi_2 = bits(io.din_channel.bits.din, 95, 0) @[DoCE.scala 217:69]
        node w_channel_out_io_din_bits_w_lo_2 = bits(mid.w, 127, 80) @[DoCE.scala 217:104]
        node _w_channel_out_io_din_bits_w_T_2 = cat(w_channel_out_io_din_bits_w_hi_2, w_channel_out_io_din_bits_w_lo_2) @[Cat.scala 30:58]
        w_channel_out.io.din.bits.w <= _w_channel_out_io_din_bits_w_T_2 @[DoCE.scala 217:39]
        w_channel_out.io.din.bits.last <= io.din_channel.bits.last @[DoCE.scala 218:42]
        skip @[DoCE.scala 214:35]
      skip @[DoCE.scala 205:23]
    node _T_10 = eq(left, UInt<7>("h040")) @[DoCE.scala 205:15]
    when _T_10 : @[DoCE.scala 205:23]
      when io.din_channel.valid : @[DoCE.scala 214:35]
        io.din_channel.ready <= w_channel_out.io.din.ready @[DoCE.scala 215:32]
        w_channel_out.io.din.valid <= UInt<1>("h01") @[DoCE.scala 216:38]
        node w_channel_out_io_din_bits_w_hi_3 = bits(io.din_channel.bits.din, 79, 0) @[DoCE.scala 217:69]
        node w_channel_out_io_din_bits_w_lo_3 = bits(mid.w, 127, 64) @[DoCE.scala 217:104]
        node _w_channel_out_io_din_bits_w_T_3 = cat(w_channel_out_io_din_bits_w_hi_3, w_channel_out_io_din_bits_w_lo_3) @[Cat.scala 30:58]
        w_channel_out.io.din.bits.w <= _w_channel_out_io_din_bits_w_T_3 @[DoCE.scala 217:39]
        w_channel_out.io.din.bits.last <= io.din_channel.bits.last @[DoCE.scala 218:42]
        skip @[DoCE.scala 214:35]
      skip @[DoCE.scala 205:23]
    node _T_11 = eq(left, UInt<7>("h050")) @[DoCE.scala 205:15]
    when _T_11 : @[DoCE.scala 205:23]
      when io.din_channel.valid : @[DoCE.scala 214:35]
        io.din_channel.ready <= w_channel_out.io.din.ready @[DoCE.scala 215:32]
        w_channel_out.io.din.valid <= UInt<1>("h01") @[DoCE.scala 216:38]
        node w_channel_out_io_din_bits_w_hi_4 = bits(io.din_channel.bits.din, 63, 0) @[DoCE.scala 217:69]
        node w_channel_out_io_din_bits_w_lo_4 = bits(mid.w, 127, 48) @[DoCE.scala 217:104]
        node _w_channel_out_io_din_bits_w_T_4 = cat(w_channel_out_io_din_bits_w_hi_4, w_channel_out_io_din_bits_w_lo_4) @[Cat.scala 30:58]
        w_channel_out.io.din.bits.w <= _w_channel_out_io_din_bits_w_T_4 @[DoCE.scala 217:39]
        w_channel_out.io.din.bits.last <= io.din_channel.bits.last @[DoCE.scala 218:42]
        skip @[DoCE.scala 214:35]
      skip @[DoCE.scala 205:23]
    node _T_12 = eq(left, UInt<7>("h060")) @[DoCE.scala 205:15]
    when _T_12 : @[DoCE.scala 205:23]
      when io.din_channel.valid : @[DoCE.scala 214:35]
        io.din_channel.ready <= w_channel_out.io.din.ready @[DoCE.scala 215:32]
        w_channel_out.io.din.valid <= UInt<1>("h01") @[DoCE.scala 216:38]
        node w_channel_out_io_din_bits_w_hi_5 = bits(io.din_channel.bits.din, 47, 0) @[DoCE.scala 217:69]
        node w_channel_out_io_din_bits_w_lo_5 = bits(mid.w, 127, 32) @[DoCE.scala 217:104]
        node _w_channel_out_io_din_bits_w_T_5 = cat(w_channel_out_io_din_bits_w_hi_5, w_channel_out_io_din_bits_w_lo_5) @[Cat.scala 30:58]
        w_channel_out.io.din.bits.w <= _w_channel_out_io_din_bits_w_T_5 @[DoCE.scala 217:39]
        w_channel_out.io.din.bits.last <= io.din_channel.bits.last @[DoCE.scala 218:42]
        skip @[DoCE.scala 214:35]
      skip @[DoCE.scala 205:23]
    node _T_13 = eq(left, UInt<7>("h070")) @[DoCE.scala 205:15]
    when _T_13 : @[DoCE.scala 205:23]
      when io.din_channel.valid : @[DoCE.scala 214:35]
        io.din_channel.ready <= w_channel_out.io.din.ready @[DoCE.scala 215:32]
        w_channel_out.io.din.valid <= UInt<1>("h01") @[DoCE.scala 216:38]
        node w_channel_out_io_din_bits_w_hi_6 = bits(io.din_channel.bits.din, 31, 0) @[DoCE.scala 217:69]
        node w_channel_out_io_din_bits_w_lo_6 = bits(mid.w, 127, 16) @[DoCE.scala 217:104]
        node _w_channel_out_io_din_bits_w_T_6 = cat(w_channel_out_io_din_bits_w_hi_6, w_channel_out_io_din_bits_w_lo_6) @[Cat.scala 30:58]
        w_channel_out.io.din.bits.w <= _w_channel_out_io_din_bits_w_T_6 @[DoCE.scala 217:39]
        w_channel_out.io.din.bits.last <= io.din_channel.bits.last @[DoCE.scala 218:42]
        skip @[DoCE.scala 214:35]
      skip @[DoCE.scala 205:23]
    node _T_14 = eq(left, UInt<8>("h080")) @[DoCE.scala 205:15]
    when _T_14 : @[DoCE.scala 205:23]
      when io.din_channel.valid : @[DoCE.scala 214:35]
        io.din_channel.ready <= w_channel_out.io.din.ready @[DoCE.scala 215:32]
        w_channel_out.io.din.valid <= UInt<1>("h01") @[DoCE.scala 216:38]
        node w_channel_out_io_din_bits_w_hi_7 = bits(io.din_channel.bits.din, 15, 0) @[DoCE.scala 217:69]
        node w_channel_out_io_din_bits_w_lo_7 = bits(mid.w, 127, 0) @[DoCE.scala 217:104]
        node _w_channel_out_io_din_bits_w_T_7 = cat(w_channel_out_io_din_bits_w_hi_7, w_channel_out_io_din_bits_w_lo_7) @[Cat.scala 30:58]
        w_channel_out.io.din.bits.w <= _w_channel_out_io_din_bits_w_T_7 @[DoCE.scala 217:39]
        w_channel_out.io.din.bits.last <= io.din_channel.bits.last @[DoCE.scala 218:42]
        skip @[DoCE.scala 214:35]
      skip @[DoCE.scala 205:23]
    node aw_channel_out_io_din_bits_aw_hi = bits(io.din_channel.bits.din, 83, 8) @[DoCE.scala 224:63]
    node aw_channel_out_io_din_bits_aw_lo = bits(io.din_channel.bits.din, 3, 0) @[DoCE.scala 224:95]
    node _aw_channel_out_io_din_bits_aw_T = cat(aw_channel_out_io_din_bits_aw_hi, aw_channel_out_io_din_bits_aw_lo) @[Cat.scala 30:58]
    aw_channel_out.io.din.bits.aw <= _aw_channel_out_io_din_bits_aw_T @[DoCE.scala 224:33]
    node _T_15 = bits(io.din_channel.bits.din, 7, 4) @[DoCE.scala 225:31]
    node _T_16 = bits(io.phy_base_0, 47, 44) @[DoCE.scala 225:55]
    node _T_17 = eq(_T_15, _T_16) @[DoCE.scala 225:38]
    node _T_18 = bits(io.phy_base_0, 48, 48) @[DoCE.scala 225:80]
    node _T_19 = and(_T_17, _T_18) @[DoCE.scala 225:64]
    when _T_19 : @[DoCE.scala 225:85]
      node aw_channel_out_io_din_bits_aw_hi_1 = bits(io.din_channel.bits.din, 83, 8) @[DoCE.scala 226:65]
      node aw_channel_out_io_din_bits_aw_lo_1 = bits(io.din_channel.bits.din, 3, 0) @[DoCE.scala 226:97]
      node _aw_channel_out_io_din_bits_aw_T_1 = cat(aw_channel_out_io_din_bits_aw_hi_1, aw_channel_out_io_din_bits_aw_lo_1) @[Cat.scala 30:58]
      node aw_channel_out_io_din_bits_aw_hi_2 = bits(io.phy_base_0, 43, 0) @[DoCE.scala 227:24]
      node _aw_channel_out_io_din_bits_aw_T_2 = cat(aw_channel_out_io_din_bits_aw_hi_2, UInt<4>("h00")) @[Cat.scala 30:58]
      wire _aw_channel_out_io_din_bits_aw_WIRE : UInt<80> @[DoCE.scala 227:51]
      _aw_channel_out_io_din_bits_aw_WIRE <= _aw_channel_out_io_din_bits_aw_T_2 @[DoCE.scala 227:51]
      node _aw_channel_out_io_din_bits_aw_T_3 = or(_aw_channel_out_io_din_bits_aw_T_1, _aw_channel_out_io_din_bits_aw_WIRE) @[DoCE.scala 226:105]
      aw_channel_out.io.din.bits.aw <= _aw_channel_out_io_din_bits_aw_T_3 @[DoCE.scala 226:35]
      skip @[DoCE.scala 225:85]
    else : @[DoCE.scala 228:91]
      node _T_20 = bits(io.din_channel.bits.din, 7, 4) @[DoCE.scala 228:37]
      node _T_21 = bits(io.phy_base_1, 47, 44) @[DoCE.scala 228:61]
      node _T_22 = eq(_T_20, _T_21) @[DoCE.scala 228:44]
      node _T_23 = bits(io.phy_base_1, 48, 48) @[DoCE.scala 228:86]
      node _T_24 = and(_T_22, _T_23) @[DoCE.scala 228:70]
      when _T_24 : @[DoCE.scala 228:91]
        node aw_channel_out_io_din_bits_aw_hi_3 = bits(io.din_channel.bits.din, 83, 8) @[DoCE.scala 229:65]
        node aw_channel_out_io_din_bits_aw_lo_2 = bits(io.din_channel.bits.din, 3, 0) @[DoCE.scala 229:97]
        node _aw_channel_out_io_din_bits_aw_T_4 = cat(aw_channel_out_io_din_bits_aw_hi_3, aw_channel_out_io_din_bits_aw_lo_2) @[Cat.scala 30:58]
        node aw_channel_out_io_din_bits_aw_hi_4 = bits(io.phy_base_1, 43, 0) @[DoCE.scala 230:24]
        node _aw_channel_out_io_din_bits_aw_T_5 = cat(aw_channel_out_io_din_bits_aw_hi_4, UInt<4>("h00")) @[Cat.scala 30:58]
        wire _aw_channel_out_io_din_bits_aw_WIRE_1 : UInt<80> @[DoCE.scala 230:51]
        _aw_channel_out_io_din_bits_aw_WIRE_1 <= _aw_channel_out_io_din_bits_aw_T_5 @[DoCE.scala 230:51]
        node _aw_channel_out_io_din_bits_aw_T_6 = or(_aw_channel_out_io_din_bits_aw_T_4, _aw_channel_out_io_din_bits_aw_WIRE_1) @[DoCE.scala 229:105]
        aw_channel_out.io.din.bits.aw <= _aw_channel_out_io_din_bits_aw_T_6 @[DoCE.scala 229:35]
        skip @[DoCE.scala 228:91]
    
