;buildInfoPackage: chisel3, version: 3.4.3, scalaVersion: 2.12.12, sbtVersion: 1.3.10
circuit aw_width_converter : 
  module dout_channel_reg_slice : 
    input clock : Clock
    input reset : Reset
    output io : {dout : {flip ready : UInt<1>, valid : UInt<1>, bits : {dout : UInt<128>, keep : UInt<16>, last : UInt<1>, connection_id : UInt<4>, byte_num : UInt<13>}}, flip din : {flip ready : UInt<1>, valid : UInt<1>, bits : {dout : UInt<128>, keep : UInt<16>, last : UInt<1>, connection_id : UInt<4>, byte_num : UInt<13>}}}
    
    wire _data_WIRE : {dout : UInt<128>, keep : UInt<16>, last : UInt<1>, connection_id : UInt<4>, byte_num : UInt<13>} @[DoCE.scala 13:34]
    _data_WIRE.byte_num <= UInt<13>("h00") @[DoCE.scala 13:34]
    _data_WIRE.connection_id <= UInt<4>("h00") @[DoCE.scala 13:34]
    _data_WIRE.last <= UInt<1>("h00") @[DoCE.scala 13:34]
    _data_WIRE.keep <= UInt<16>("h00") @[DoCE.scala 13:34]
    _data_WIRE.dout <= UInt<128>("h00") @[DoCE.scala 13:34]
    reg data : {dout : UInt<128>, keep : UInt<16>, last : UInt<1>, connection_id : UInt<4>, byte_num : UInt<13>}, clock with : (reset => (reset, _data_WIRE)) @[DoCE.scala 13:21]
    reg valid : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[DoCE.scala 14:22]
    node _T = not(io.dout.valid) @[DoCE.scala 15:24]
    node _T_1 = or(io.dout.ready, _T) @[DoCE.scala 15:22]
    when _T_1 : @[DoCE.scala 15:39]
      data.byte_num <= io.din.bits.byte_num @[DoCE.scala 16:10]
      data.connection_id <= io.din.bits.connection_id @[DoCE.scala 16:10]
      data.last <= io.din.bits.last @[DoCE.scala 16:10]
      data.keep <= io.din.bits.keep @[DoCE.scala 16:10]
      data.dout <= io.din.bits.dout @[DoCE.scala 16:10]
      valid <= io.din.valid @[DoCE.scala 17:11]
      skip @[DoCE.scala 15:39]
    node _io_din_ready_T = not(io.dout.valid) @[DoCE.scala 20:35]
    node _io_din_ready_T_1 = or(io.dout.ready, _io_din_ready_T) @[DoCE.scala 20:33]
    io.din.ready <= _io_din_ready_T_1 @[DoCE.scala 20:16]
    io.dout.valid <= valid @[DoCE.scala 21:17]
    io.dout.bits.byte_num <= data.byte_num @[DoCE.scala 22:16]
    io.dout.bits.connection_id <= data.connection_id @[DoCE.scala 22:16]
    io.dout.bits.last <= data.last @[DoCE.scala 22:16]
    io.dout.bits.keep <= data.keep @[DoCE.scala 22:16]
    io.dout.bits.dout <= data.dout @[DoCE.scala 22:16]
    
  module aw_width_converter : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip aw_channel : {flip ready : UInt<1>, valid : UInt<1>, bits : {aw : UInt<84>, connection_id : UInt<4>}}, flip w_channel : {flip ready : UInt<1>, valid : UInt<1>, bits : {w : UInt<144>, last : UInt<1>}}, dout_channel : {flip ready : UInt<1>, valid : UInt<1>, bits : {dout : UInt<128>, keep : UInt<16>, last : UInt<1>, connection_id : UInt<4>, byte_num : UInt<13>}}}
    
    reg bit_sent : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[DoCE.scala 49:25]
    reg bit_recv : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[DoCE.scala 50:25]
    inst out of dout_channel_reg_slice @[DoCE.scala 51:19]
    out.clock <= clock
    out.reset <= reset
    node _aw_len_T = bits(io.aw_channel.bits.aw, 77, 70) @[DoCE.scala 52:37]
    node _aw_len_T_1 = add(_aw_len_T, UInt<9>("h01")) @[DoCE.scala 52:46]
    node aw_len = tail(_aw_len_T_1, 1) @[DoCE.scala 52:46]
    wire _mid_WIRE : {w : UInt<144>, last : UInt<1>} @[DoCE.scala 53:33]
    _mid_WIRE.last <= UInt<1>("h00") @[DoCE.scala 53:33]
    _mid_WIRE.w <= UInt<144>("h00") @[DoCE.scala 53:33]
    reg mid : {w : UInt<144>, last : UInt<1>}, clock with : (reset => (reset, _mid_WIRE)) @[DoCE.scala 53:20]
    node _T = and(io.w_channel.ready, io.w_channel.valid) @[DoCE.scala 58:27]
    when _T : @[DoCE.scala 58:49]
      mid.w <= io.w_channel.bits.w @[DoCE.scala 59:11]
      mid.last <= io.w_channel.bits.last @[DoCE.scala 60:14]
      skip @[DoCE.scala 58:49]
    node _T_1 = and(out.io.din.valid, out.io.din.ready) @[DoCE.scala 63:25]
    when _T_1 : @[DoCE.scala 63:45]
      when out.io.din.bits.last : @[DoCE.scala 64:31]
        bit_sent <= UInt<1>("h00") @[DoCE.scala 65:16]
        skip @[DoCE.scala 64:31]
      else : @[DoCE.scala 66:16]
        node _bit_sent_T = add(bit_sent, UInt<8>("h080")) @[DoCE.scala 67:28]
        node _bit_sent_T_1 = tail(_bit_sent_T, 1) @[DoCE.scala 67:28]
        bit_sent <= _bit_sent_T_1 @[DoCE.scala 67:16]
        skip @[DoCE.scala 66:16]
      skip @[DoCE.scala 63:45]
    node _T_2 = and(io.w_channel.ready, io.w_channel.valid) @[DoCE.scala 71:27]
    when _T_2 : @[DoCE.scala 71:49]
      node _T_3 = and(io.aw_channel.ready, io.aw_channel.valid) @[DoCE.scala 72:30]
      when _T_3 : @[DoCE.scala 72:53]
        node _bit_recv_T = add(bit_recv, UInt<8>("h090")) @[DoCE.scala 73:28]
        node _bit_recv_T_1 = tail(_bit_recv_T, 1) @[DoCE.scala 73:28]
        node _bit_recv_T_2 = add(_bit_recv_T_1, UInt<8>("h080")) @[DoCE.scala 73:48]
        node _bit_recv_T_3 = tail(_bit_recv_T_2, 1) @[DoCE.scala 73:48]
        bit_recv <= _bit_recv_T_3 @[DoCE.scala 73:16]
        skip @[DoCE.scala 72:53]
      else : @[DoCE.scala 74:16]
        node _bit_recv_T_4 = add(bit_recv, UInt<8>("h090")) @[DoCE.scala 75:28]
        node _bit_recv_T_5 = tail(_bit_recv_T_4, 1) @[DoCE.scala 75:28]
        bit_recv <= _bit_recv_T_5 @[DoCE.scala 75:16]
        skip @[DoCE.scala 74:16]
      skip @[DoCE.scala 71:49]
    else : @[DoCE.scala 77:75]
      node _T_4 = and(out.io.din.valid, out.io.din.ready) @[DoCE.scala 77:31]
      node _T_5 = and(_T_4, out.io.din.bits.last) @[DoCE.scala 77:51]
      when _T_5 : @[DoCE.scala 77:75]
        bit_recv <= UInt<1>("h00") @[DoCE.scala 78:14]
        skip @[DoCE.scala 77:75]
    io.dout_channel.bits.byte_num <= out.io.dout.bits.byte_num @[DoCE.scala 81:19]
    io.dout_channel.bits.connection_id <= out.io.dout.bits.connection_id @[DoCE.scala 81:19]
    io.dout_channel.bits.last <= out.io.dout.bits.last @[DoCE.scala 81:19]
    io.dout_channel.bits.keep <= out.io.dout.bits.keep @[DoCE.scala 81:19]
    io.dout_channel.bits.dout <= out.io.dout.bits.dout @[DoCE.scala 81:19]
    io.dout_channel.valid <= out.io.dout.valid @[DoCE.scala 81:19]
    out.io.dout.ready <= io.dout_channel.ready @[DoCE.scala 81:19]
    out.io.din.valid <= UInt<1>("h00") @[DoCE.scala 82:20]
    out.io.din.bits.dout <= out.io.dout.bits.dout @[DoCE.scala 83:24]
    out.io.din.bits.last <= out.io.dout.bits.last @[DoCE.scala 84:24]
    out.io.din.bits.keep <= out.io.dout.bits.keep @[DoCE.scala 85:24]
    out.io.din.bits.connection_id <= out.io.dout.bits.connection_id @[DoCE.scala 86:33]
    out.io.din.bits.byte_num <= out.io.dout.bits.byte_num @[DoCE.scala 87:28]
    io.aw_channel.ready <= UInt<1>("h00") @[DoCE.scala 88:23]
    io.w_channel.ready <= UInt<1>("h00") @[DoCE.scala 89:22]
    node _left_T = sub(bit_recv, bit_sent) @[DoCE.scala 90:23]
    node left = tail(_left_T, 1) @[DoCE.scala 90:23]
    node _T_6 = eq(left, UInt<1>("h00")) @[DoCE.scala 93:15]
    when _T_6 : @[DoCE.scala 93:23]
      node _T_7 = eq(bit_sent, UInt<1>("h00")) @[DoCE.scala 95:23]
      node _T_8 = and(_T_7, io.aw_channel.valid) @[DoCE.scala 95:31]
      node _T_9 = and(_T_8, io.w_channel.valid) @[DoCE.scala 95:54]
      when _T_9 : @[DoCE.scala 95:76]
        wire _out_io_din_bits_dout_WIRE : UInt<128> @[DoCE.scala 97:67]
        _out_io_din_bits_dout_WIRE <= io.aw_channel.bits.aw @[DoCE.scala 97:67]
        out.io.din.bits.dout <= _out_io_din_bits_dout_WIRE @[DoCE.scala 97:34]
        out.io.din.valid <= UInt<1>("h01") @[DoCE.scala 102:28]
        out.io.din.bits.last <= UInt<1>("h00") @[DoCE.scala 103:32]
        out.io.din.bits.keep <= UInt<16>("h0ffff") @[DoCE.scala 104:32]
        out.io.din.bits.connection_id <= io.aw_channel.bits.connection_id @[DoCE.scala 105:41]
        node _out_io_din_bits_byte_num_T = cat(aw_len, UInt<4>("h0b")) @[Cat.scala 30:58]
        node _out_io_din_bits_byte_num_T_1 = cat(aw_len, UInt<1>("h00")) @[Cat.scala 30:58]
        node _out_io_din_bits_byte_num_T_2 = add(_out_io_din_bits_byte_num_T, _out_io_din_bits_byte_num_T_1) @[DoCE.scala 106:62]
        node _out_io_din_bits_byte_num_T_3 = tail(_out_io_din_bits_byte_num_T_2, 1) @[DoCE.scala 106:62]
        out.io.din.bits.byte_num <= _out_io_din_bits_byte_num_T_3 @[DoCE.scala 106:36]
        io.aw_channel.ready <= out.io.din.ready @[DoCE.scala 107:31]
        io.w_channel.ready <= out.io.din.ready @[DoCE.scala 108:30]
        skip @[DoCE.scala 95:76]
      else : @[DoCE.scala 109:57]
        node _T_10 = gt(bit_sent, UInt<1>("h00")) @[DoCE.scala 109:29]
        node _T_11 = and(_T_10, io.w_channel.valid) @[DoCE.scala 109:35]
        when _T_11 : @[DoCE.scala 109:57]
          out.io.din.valid <= UInt<1>("h01") @[DoCE.scala 110:28]
          node _out_io_din_bits_dout_T = bits(io.w_channel.bits.w, 127, 0) @[DoCE.scala 111:54]
          out.io.din.bits.dout <= _out_io_din_bits_dout_T @[DoCE.scala 111:32]
          out.io.din.bits.last <= UInt<1>("h00") @[DoCE.scala 112:32]
          out.io.din.bits.keep <= UInt<16>("h0ffff") @[DoCE.scala 113:32]
          io.w_channel.ready <= out.io.din.ready @[DoCE.scala 114:30]
          skip @[DoCE.scala 109:57]
      skip @[DoCE.scala 93:23]
    node _T_12 = eq(left, UInt<5>("h010")) @[DoCE.scala 93:15]
    when _T_12 : @[DoCE.scala 93:23]
      when mid.last : @[DoCE.scala 117:23]
        out.io.din.valid <= UInt<1>("h01") @[DoCE.scala 118:28]
        node _out_io_din_bits_dout_T_1 = bits(mid.w, 143, 128) @[DoCE.scala 119:40]
        out.io.din.bits.dout <= _out_io_din_bits_dout_T_1 @[DoCE.scala 119:32]
        out.io.din.bits.last <= UInt<1>("h01") @[DoCE.scala 120:32]
        wire _out_io_din_bits_keep_WIRE : UInt<1>[2] @[DoCE.scala 121:42]
        _out_io_din_bits_keep_WIRE[0] <= UInt<1>("h01") @[DoCE.scala 121:42]
        _out_io_din_bits_keep_WIRE[1] <= UInt<1>("h01") @[DoCE.scala 121:42]
        node _out_io_din_bits_keep_T = cat(_out_io_din_bits_keep_WIRE[1], _out_io_din_bits_keep_WIRE[0]) @[DoCE.scala 121:76]
        out.io.din.bits.keep <= _out_io_din_bits_keep_T @[DoCE.scala 121:32]
        skip @[DoCE.scala 117:23]
      else : @[DoCE.scala 122:39]
        when io.w_channel.valid : @[DoCE.scala 122:39]
          out.io.din.valid <= UInt<1>("h01") @[DoCE.scala 123:28]
          node out_io_din_bits_dout_hi = bits(io.w_channel.bits.w, 111, 0) @[DoCE.scala 124:58]
          node out_io_din_bits_dout_lo = bits(mid.w, 143, 128) @[DoCE.scala 124:88]
          node _out_io_din_bits_dout_T_2 = cat(out_io_din_bits_dout_hi, out_io_din_bits_dout_lo) @[Cat.scala 30:58]
          out.io.din.bits.dout <= _out_io_din_bits_dout_T_2 @[DoCE.scala 124:32]
          out.io.din.bits.last <= UInt<1>("h00") @[DoCE.scala 125:32]
          out.io.din.bits.keep <= UInt<16>("h0ffff") @[DoCE.scala 126:32]
          io.w_channel.ready <= out.io.din.ready @[DoCE.scala 127:30]
          skip @[DoCE.scala 122:39]
      skip @[DoCE.scala 93:23]
    node _T_13 = eq(left, UInt<6>("h020")) @[DoCE.scala 93:15]
    when _T_13 : @[DoCE.scala 93:23]
      when mid.last : @[DoCE.scala 117:23]
        out.io.din.valid <= UInt<1>("h01") @[DoCE.scala 118:28]
        node _out_io_din_bits_dout_T_3 = bits(mid.w, 143, 112) @[DoCE.scala 119:40]
        out.io.din.bits.dout <= _out_io_din_bits_dout_T_3 @[DoCE.scala 119:32]
        out.io.din.bits.last <= UInt<1>("h01") @[DoCE.scala 120:32]
        wire _out_io_din_bits_keep_WIRE_1 : UInt<1>[4] @[DoCE.scala 121:42]
        _out_io_din_bits_keep_WIRE_1[0] <= UInt<1>("h01") @[DoCE.scala 121:42]
        _out_io_din_bits_keep_WIRE_1[1] <= UInt<1>("h01") @[DoCE.scala 121:42]
        _out_io_din_bits_keep_WIRE_1[2] <= UInt<1>("h01") @[DoCE.scala 121:42]
        _out_io_din_bits_keep_WIRE_1[3] <= UInt<1>("h01") @[DoCE.scala 121:42]
        node out_io_din_bits_keep_lo = cat(_out_io_din_bits_keep_WIRE_1[1], _out_io_din_bits_keep_WIRE_1[0]) @[DoCE.scala 121:76]
        node out_io_din_bits_keep_hi = cat(_out_io_din_bits_keep_WIRE_1[3], _out_io_din_bits_keep_WIRE_1[2]) @[DoCE.scala 121:76]
        node _out_io_din_bits_keep_T_1 = cat(out_io_din_bits_keep_hi, out_io_din_bits_keep_lo) @[DoCE.scala 121:76]
        out.io.din.bits.keep <= _out_io_din_bits_keep_T_1 @[DoCE.scala 121:32]
        skip @[DoCE.scala 117:23]
      else : @[DoCE.scala 122:39]
        when io.w_channel.valid : @[DoCE.scala 122:39]
          out.io.din.valid <= UInt<1>("h01") @[DoCE.scala 123:28]
          node out_io_din_bits_dout_hi_1 = bits(io.w_channel.bits.w, 95, 0) @[DoCE.scala 124:58]
          node out_io_din_bits_dout_lo_1 = bits(mid.w, 143, 112) @[DoCE.scala 124:88]
          node _out_io_din_bits_dout_T_4 = cat(out_io_din_bits_dout_hi_1, out_io_din_bits_dout_lo_1) @[Cat.scala 30:58]
          out.io.din.bits.dout <= _out_io_din_bits_dout_T_4 @[DoCE.scala 124:32]
          out.io.din.bits.last <= UInt<1>("h00") @[DoCE.scala 125:32]
          out.io.din.bits.keep <= UInt<16>("h0ffff") @[DoCE.scala 126:32]
          io.w_channel.ready <= out.io.din.ready @[DoCE.scala 127:30]
          skip @[DoCE.scala 122:39]
      skip @[DoCE.scala 93:23]
    node _T_14 = eq(left, UInt<6>("h030")) @[DoCE.scala 93:15]
    when _T_14 : @[DoCE.scala 93:23]
      when mid.last : @[DoCE.scala 117:23]
        out.io.din.valid <= UInt<1>("h01") @[DoCE.scala 118:28]
        node _out_io_din_bits_dout_T_5 = bits(mid.w, 143, 96) @[DoCE.scala 119:40]
        out.io.din.bits.dout <= _out_io_din_bits_dout_T_5 @[DoCE.scala 119:32]
        out.io.din.bits.last <= UInt<1>("h01") @[DoCE.scala 120:32]
        wire _out_io_din_bits_keep_WIRE_2 : UInt<1>[6] @[DoCE.scala 121:42]
        _out_io_din_bits_keep_WIRE_2[0] <= UInt<1>("h01") @[DoCE.scala 121:42]
        _out_io_din_bits_keep_WIRE_2[1] <= UInt<1>("h01") @[DoCE.scala 121:42]
        _out_io_din_bits_keep_WIRE_2[2] <= UInt<1>("h01") @[DoCE.scala 121:42]
        _out_io_din_bits_keep_WIRE_2[3] <= UInt<1>("h01") @[DoCE.scala 121:42]
        _out_io_din_bits_keep_WIRE_2[4] <= UInt<1>("h01") @[DoCE.scala 121:42]
        _out_io_din_bits_keep_WIRE_2[5] <= UInt<1>("h01") @[DoCE.scala 121:42]
        node out_io_din_bits_keep_lo_hi = cat(_out_io_din_bits_keep_WIRE_2[2], _out_io_din_bits_keep_WIRE_2[1]) @[DoCE.scala 121:76]
        node out_io_din_bits_keep_lo_1 = cat(out_io_din_bits_keep_lo_hi, _out_io_din_bits_keep_WIRE_2[0]) @[DoCE.scala 121:76]
        node out_io_din_bits_keep_hi_hi = cat(_out_io_din_bits_keep_WIRE_2[5], _out_io_din_bits_keep_WIRE_2[4]) @[DoCE.scala 121:76]
        node out_io_din_bits_keep_hi_1 = cat(out_io_din_bits_keep_hi_hi, _out_io_din_bits_keep_WIRE_2[3]) @[DoCE.scala 121:76]
        node _out_io_din_bits_keep_T_2 = cat(out_io_din_bits_keep_hi_1, out_io_din_bits_keep_lo_1) @[DoCE.scala 121:76]
        out.io.din.bits.keep <= _out_io_din_bits_keep_T_2 @[DoCE.scala 121:32]
        skip @[DoCE.scala 117:23]
      else : @[DoCE.scala 122:39]
        when io.w_channel.valid : @[DoCE.scala 122:39]
          out.io.din.valid <= UInt<1>("h01") @[DoCE.scala 123:28]
          node out_io_din_bits_dout_hi_2 = bits(io.w_channel.bits.w, 79, 0) @[DoCE.scala 124:58]
          node out_io_din_bits_dout_lo_2 = bits(mid.w, 143, 96) @[DoCE.scala 124:88]
          node _out_io_din_bits_dout_T_6 = cat(out_io_din_bits_dout_hi_2, out_io_din_bits_dout_lo_2) @[Cat.scala 30:58]
          out.io.din.bits.dout <= _out_io_din_bits_dout_T_6 @[DoCE.scala 124:32]
          out.io.din.bits.last <= UInt<1>("h00") @[DoCE.scala 125:32]
          out.io.din.bits.keep <= UInt<16>("h0ffff") @[DoCE.scala 126:32]
          io.w_channel.ready <= out.io.din.ready @[DoCE.scala 127:30]
          skip @[DoCE.scala 122:39]
      skip @[DoCE.scala 93:23]
    node _T_15 = eq(left, UInt<7>("h040")) @[DoCE.scala 93:15]
    when _T_15 : @[DoCE.scala 93:23]
      when mid.last : @[DoCE.scala 117:23]
        out.io.din.valid <= UInt<1>("h01") @[DoCE.scala 118:28]
        node _out_io_din_bits_dout_T_7 = bits(mid.w, 143, 80) @[DoCE.scala 119:40]
        out.io.din.bits.dout <= _out_io_din_bits_dout_T_7 @[DoCE.scala 119:32]
        out.io.din.bits.last <= UInt<1>("h01") @[DoCE.scala 120:32]
        wire _out_io_din_bits_keep_WIRE_3 : UInt<1>[8] @[DoCE.scala 121:42]
        _out_io_din_bits_keep_WIRE_3[0] <= UInt<1>("h01") @[DoCE.scala 121:42]
        _out_io_din_bits_keep_WIRE_3[1] <= UInt<1>("h01") @[DoCE.scala 121:42]
        _out_io_din_bits_keep_WIRE_3[2] <= UInt<1>("h01") @[DoCE.scala 121:42]
        _out_io_din_bits_keep_WIRE_3[3] <= UInt<1>("h01") @[DoCE.scala 121:42]
        _out_io_din_bits_keep_WIRE_3[4] <= UInt<1>("h01") @[DoCE.scala 121:42]
        _out_io_din_bits_keep_WIRE_3[5] <= UInt<1>("h01") @[DoCE.scala 121:42]
        _out_io_din_bits_keep_WIRE_3[6] <= UInt<1>("h01") @[DoCE.scala 121:42]
        _out_io_din_bits_keep_WIRE_3[7] <= UInt<1>("h01") @[DoCE.scala 121:42]
        node out_io_din_bits_keep_lo_lo = cat(_out_io_din_bits_keep_WIRE_3[1], _out_io_din_bits_keep_WIRE_3[0]) @[DoCE.scala 121:76]
        node out_io_din_bits_keep_lo_hi_1 = cat(_out_io_din_bits_keep_WIRE_3[3], _out_io_din_bits_keep_WIRE_3[2]) @[DoCE.scala 121:76]
        node out_io_din_bits_keep_lo_2 = cat(out_io_din_bits_keep_lo_hi_1, out_io_din_bits_keep_lo_lo) @[DoCE.scala 121:76]
        node out_io_din_bits_keep_hi_lo = cat(_out_io_din_bits_keep_WIRE_3[5], _out_io_din_bits_keep_WIRE_3[4]) @[DoCE.scala 121:76]
        node out_io_din_bits_keep_hi_hi_1 = cat(_out_io_din_bits_keep_WIRE_3[7], _out_io_din_bits_keep_WIRE_3[6]) @[DoCE.scala 121:76]
        node out_io_din_bits_keep_hi_2 = cat(out_io_din_bits_keep_hi_hi_1, out_io_din_bits_keep_hi_lo) @[DoCE.scala 121:76]
        node _out_io_din_bits_keep_T_3 = cat(out_io_din_bits_keep_hi_2, out_io_din_bits_keep_lo_2) @[DoCE.scala 121:76]
        out.io.din.bits.keep <= _out_io_din_bits_keep_T_3 @[DoCE.scala 121:32]
        skip @[DoCE.scala 117:23]
      else : @[DoCE.scala 122:39]
        when io.w_channel.valid : @[DoCE.scala 122:39]
          out.io.din.valid <= UInt<1>("h01") @[DoCE.scala 123:28]
          node out_io_din_bits_dout_hi_3 = bits(io.w_channel.bits.w, 63, 0) @[DoCE.scala 124:58]
          node out_io_din_bits_dout_lo_3 = bits(mid.w, 143, 80) @[DoCE.scala 124:88]
          node _out_io_din_bits_dout_T_8 = cat(out_io_din_bits_dout_hi_3, out_io_din_bits_dout_lo_3) @[Cat.scala 30:58]
          out.io.din.bits.dout <= _out_io_din_bits_dout_T_8 @[DoCE.scala 124:32]
          out.io.din.bits.last <= UInt<1>("h00") @[DoCE.scala 125:32]
          out.io.din.bits.keep <= UInt<16>("h0ffff") @[DoCE.scala 126:32]
          io.w_channel.ready <= out.io.din.ready @[DoCE.scala 127:30]
          skip @[DoCE.scala 122:39]
      skip @[DoCE.scala 93:23]
    node _T_16 = eq(left, UInt<7>("h050")) @[DoCE.scala 93:15]
    when _T_16 : @[DoCE.scala 93:23]
      when mid.last : @[DoCE.scala 117:23]
        out.io.din.valid <= UInt<1>("h01") @[DoCE.scala 118:28]
        node _out_io_din_bits_dout_T_9 = bits(mid.w, 143, 64) @[DoCE.scala 119:40]
        out.io.din.bits.dout <= _out_io_din_bits_dout_T_9 @[DoCE.scala 119:32]
        out.io.din.bits.last <= UInt<1>("h01") @[DoCE.scala 120:32]
        wire _out_io_din_bits_keep_WIRE_4 : UInt<1>[10] @[DoCE.scala 121:42]
        _out_io_din_bits_keep_WIRE_4[0] <= UInt<1>("h01") @[DoCE.scala 121:42]
        _out_io_din_bits_keep_WIRE_4[1] <= UInt<1>("h01") @[DoCE.scala 121:42]
        _out_io_din_bits_keep_WIRE_4[2] <= UInt<1>("h01") @[DoCE.scala 121:42]
        _out_io_din_bits_keep_WIRE_4[3] <= UInt<1>("h01") @[DoCE.scala 121:42]
        _out_io_din_bits_keep_WIRE_4[4] <= UInt<1>("h01") @[DoCE.scala 121:42]
        _out_io_din_bits_keep_WIRE_4[5] <= UInt<1>("h01") @[DoCE.scala 121:42]
        _out_io_din_bits_keep_WIRE_4[6] <= UInt<1>("h01") @[DoCE.scala 121:42]
        _out_io_din_bits_keep_WIRE_4[7] <= UInt<1>("h01") @[DoCE.scala 121:42]
        _out_io_din_bits_keep_WIRE_4[8] <= UInt<1>("h01") @[DoCE.scala 121:42]
        _out_io_din_bits_keep_WIRE_4[9] <= UInt<1>("h01") @[DoCE.scala 121:42]
        node out_io_din_bits_keep_lo_lo_1 = cat(_out_io_din_bits_keep_WIRE_4[1], _out_io_din_bits_keep_WIRE_4[0]) @[DoCE.scala 121:76]
        node out_io_din_bits_keep_lo_hi_hi = cat(_out_io_din_bits_keep_WIRE_4[4], _out_io_din_bits_keep_WIRE_4[3]) @[DoCE.scala 121:76]
        node out_io_din_bits_keep_lo_hi_2 = cat(out_io_din_bits_keep_lo_hi_hi, _out_io_din_bits_keep_WIRE_4[2]) @[DoCE.scala 121:76]
        node out_io_din_bits_keep_lo_3 = cat(out_io_din_bits_keep_lo_hi_2, out_io_din_bits_keep_lo_lo_1) @[DoCE.scala 121:76]
        node out_io_din_bits_keep_hi_lo_1 = cat(_out_io_din_bits_keep_WIRE_4[6], _out_io_din_bits_keep_WIRE_4[5]) @[DoCE.scala 121:76]
        node out_io_din_bits_keep_hi_hi_hi = cat(_out_io_din_bits_keep_WIRE_4[9], _out_io_din_bits_keep_WIRE_4[8]) @[DoCE.scala 121:76]
        node out_io_din_bits_keep_hi_hi_2 = cat(out_io_din_bits_keep_hi_hi_hi, _out_io_din_bits_keep_WIRE_4[7]) @[DoCE.scala 121:76]
        node out_io_din_bits_keep_hi_3 = cat(out_io_din_bits_keep_hi_hi_2, out_io_din_bits_keep_hi_lo_1) @[DoCE.scala 121:76]
        node _out_io_din_bits_keep_T_4 = cat(out_io_din_bits_keep_hi_3, out_io_din_bits_keep_lo_3) @[DoCE.scala 121:76]
        out.io.din.bits.keep <= _out_io_din_bits_keep_T_4 @[DoCE.scala 121:32]
        skip @[DoCE.scala 117:23]
      else : @[DoCE.scala 122:39]
        when io.w_channel.valid : @[DoCE.scala 122:39]
          out.io.din.valid <= UInt<1>("h01") @[DoCE.scala 123:28]
          node out_io_din_bits_dout_hi_4 = bits(io.w_channel.bits.w, 47, 0) @[DoCE.scala 124:58]
          node out_io_din_bits_dout_lo_4 = bits(mid.w, 143, 64) @[DoCE.scala 124:88]
          node _out_io_din_bits_dout_T_10 = cat(out_io_din_bits_dout_hi_4, out_io_din_bits_dout_lo_4) @[Cat.scala 30:58]
          out.io.din.bits.dout <= _out_io_din_bits_dout_T_10 @[DoCE.scala 124:32]
          out.io.din.bits.last <= UInt<1>("h00") @[DoCE.scala 125:32]
          out.io.din.bits.keep <= UInt<16>("h0ffff") @[DoCE.scala 126:32]
          io.w_channel.ready <= out.io.din.ready @[DoCE.scala 127:30]
          skip @[DoCE.scala 122:39]
      skip @[DoCE.scala 93:23]
    node _T_17 = eq(left, UInt<7>("h060")) @[DoCE.scala 93:15]
    when _T_17 : @[DoCE.scala 93:23]
      when mid.last : @[DoCE.scala 117:23]
        out.io.din.valid <= UInt<1>("h01") @[DoCE.scala 118:28]
        node _out_io_din_bits_dout_T_11 = bits(mid.w, 143, 48) @[DoCE.scala 119:40]
        out.io.din.bits.dout <= _out_io_din_bits_dout_T_11 @[DoCE.scala 119:32]
        out.io.din.bits.last <= UInt<1>("h01") @[DoCE.scala 120:32]
        wire _out_io_din_bits_keep_WIRE_5 : UInt<1>[12] @[DoCE.scala 121:42]
        _out_io_din_bits_keep_WIRE_5[0] <= UInt<1>("h01") @[DoCE.scala 121:42]
        _out_io_din_bits_keep_WIRE_5[1] <= UInt<1>("h01") @[DoCE.scala 121:42]
        _out_io_din_bits_keep_WIRE_5[2] <= UInt<1>("h01") @[DoCE.scala 121:42]
        _out_io_din_bits_keep_WIRE_5[3] <= UInt<1>("h01") @[DoCE.scala 121:42]
        _out_io_din_bits_keep_WIRE_5[4] <= UInt<1>("h01") @[DoCE.scala 121:42]
        _out_io_din_bits_keep_WIRE_5[5] <= UInt<1>("h01") @[DoCE.scala 121:42]
        _out_io_din_bits_keep_WIRE_5[6] <= UInt<1>("h01") @[DoCE.scala 121:42]
        _out_io_din_bits_keep_WIRE_5[7] <= UInt<1>("h01") @[DoCE.scala 121:42]
        _out_io_din_bits_keep_WIRE_5[8] <= UInt<1>("h01") @[DoCE.scala 121:42]
        _out_io_din_bits_keep_WIRE_5[9] <= UInt<1>("h01") @[DoCE.scala 121:42]
        _out_io_din_bits_keep_WIRE_5[10] <= UInt<1>("h01") @[DoCE.scala 121:42]
        _out_io_din_bits_keep_WIRE_5[11] <= UInt<1>("h01") @[DoCE.scala 121:42]
        node out_io_din_bits_keep_lo_lo_hi = cat(_out_io_din_bits_keep_WIRE_5[2], _out_io_din_bits_keep_WIRE_5[1]) @[DoCE.scala 121:76]
        node out_io_din_bits_keep_lo_lo_2 = cat(out_io_din_bits_keep_lo_lo_hi, _out_io_din_bits_keep_WIRE_5[0]) @[DoCE.scala 121:76]
        node out_io_din_bits_keep_lo_hi_hi_1 = cat(_out_io_din_bits_keep_WIRE_5[5], _out_io_din_bits_keep_WIRE_5[4]) @[DoCE.scala 121:76]
        node out_io_din_bits_keep_lo_hi_3 = cat(out_io_din_bits_keep_lo_hi_hi_1, _out_io_din_bits_keep_WIRE_5[3]) @[DoCE.scala 121:76]
        node out_io_din_bits_keep_lo_4 = cat(out_io_din_bits_keep_lo_hi_3, out_io_din_bits_keep_lo_lo_2) @[DoCE.scala 121:76]
        node out_io_din_bits_keep_hi_lo_hi = cat(_out_io_din_bits_keep_WIRE_5[8], _out_io_din_bits_keep_WIRE_5[7]) @[DoCE.scala 121:76]
        node out_io_din_bits_keep_hi_lo_2 = cat(out_io_din_bits_keep_hi_lo_hi, _out_io_din_bits_keep_WIRE_5[6]) @[DoCE.scala 121:76]
        node out_io_din_bits_keep_hi_hi_hi_1 = cat(_out_io_din_bits_keep_WIRE_5[11], _out_io_din_bits_keep_WIRE_5[10]) @[DoCE.scala 121:76]
        node out_io_din_bits_keep_hi_hi_3 = cat(out_io_din_bits_keep_hi_hi_hi_1, _out_io_din_bits_keep_WIRE_5[9]) @[DoCE.scala 121:76]
        node out_io_din_bits_keep_hi_4 = cat(out_io_din_bits_keep_hi_hi_3, out_io_din_bits_keep_hi_lo_2) @[DoCE.scala 121:76]
        node _out_io_din_bits_keep_T_5 = cat(out_io_din_bits_keep_hi_4, out_io_din_bits_keep_lo_4) @[DoCE.scala 121:76]
        out.io.din.bits.keep <= _out_io_din_bits_keep_T_5 @[DoCE.scala 121:32]
        skip @[DoCE.scala 117:23]
      else : @[DoCE.scala 122:39]
        when io.w_channel.valid : @[DoCE.scala 122:39]
          out.io.din.valid <= UInt<1>("h01") @[DoCE.scala 123:28]
          node out_io_din_bits_dout_hi_5 = bits(io.w_channel.bits.w, 31, 0) @[DoCE.scala 124:58]
          node out_io_din_bits_dout_lo_5 = bits(mid.w, 143, 48) @[DoCE.scala 124:88]
          node _out_io_din_bits_dout_T_12 = cat(out_io_din_bits_dout_hi_5, out_io_din_bits_dout_lo_5) @[Cat.scala 30:58]
          out.io.din.bits.dout <= _out_io_din_bits_dout_T_12 @[DoCE.scala 124:32]
          out.io.din.bits.last <= UInt<1>("h00") @[DoCE.scala 125:32]
          out.io.din.bits.keep <= UInt<16>("h0ffff") @[DoCE.scala 126:32]
          io.w_channel.ready <= out.io.din.ready @[DoCE.scala 127:30]
          skip @[DoCE.scala 122:39]
      skip @[DoCE.scala 93:23]
    node _T_18 = eq(left, UInt<7>("h070")) @[DoCE.scala 93:15]
    when _T_18 : @[DoCE.scala 93:23]
      when mid.last : @[DoCE.scala 117:23]
        out.io.din.valid <= UInt<1>("h01") @[DoCE.scala 118:28]
        node _out_io_din_bits_dout_T_13 = bits(mid.w, 143, 32) @[DoCE.scala 119:40]
        out.io.din.bits.dout <= _out_io_din_bits_dout_T_13 @[DoCE.scala 119:32]
        out.io.din.bits.last <= UInt<1>("h01") @[DoCE.scala 120:32]
        wire _out_io_din_bits_keep_WIRE_6 : UInt<1>[14] @[DoCE.scala 121:42]
        _out_io_din_bits_keep_WIRE_6[0] <= UInt<1>("h01") @[DoCE.scala 121:42]
        _out_io_din_bits_keep_WIRE_6[1] <= UInt<1>("h01") @[DoCE.scala 121:42]
        _out_io_din_bits_keep_WIRE_6[2] <= UInt<1>("h01") @[DoCE.scala 121:42]
        _out_io_din_bits_keep_WIRE_6[3] <= UInt<1>("h01") @[DoCE.scala 121:42]
        _out_io_din_bits_keep_WIRE_6[4] <= UInt<1>("h01") @[DoCE.scala 121:42]
        _out_io_din_bits_keep_WIRE_6[5] <= UInt<1>("h01") @[DoCE.scala 121:42]
        _out_io_din_bits_keep_WIRE_6[6] <= UInt<1>("h01") @[DoCE.scala 121:42]
        _out_io_din_bits_keep_WIRE_6[7] <= UInt<1>("h01") @[DoCE.scala 121:42]
        _out_io_din_bits_keep_WIRE_6[8] <= UInt<1>("h01") @[DoCE.scala 121:42]
        _out_io_din_bits_keep_WIRE_6[9] <= UInt<1>("h01") @[DoCE.scala 121:42]
        _out_io_din_bits_keep_WIRE_6[10] <= UInt<1>("h01") @[DoCE.scala 121:42]
        _out_io_din_bits_keep_WIRE_6[11] <= UInt<1>("h01") @[DoCE.scala 121:42]
        _out_io_din_bits_keep_WIRE_6[12] <= UInt<1>("h01") @[DoCE.scala 121:42]
        _out_io_din_bits_keep_WIRE_6[13] <= UInt<1>("h01") @[DoCE.scala 121:42]
        node out_io_din_bits_keep_lo_lo_hi_1 = cat(_out_io_din_bits_keep_WIRE_6[2], _out_io_din_bits_keep_WIRE_6[1]) @[DoCE.scala 121:76]
        node out_io_din_bits_keep_lo_lo_3 = cat(out_io_din_bits_keep_lo_lo_hi_1, _out_io_din_bits_keep_WIRE_6[0]) @[DoCE.scala 121:76]
        node out_io_din_bits_keep_lo_hi_lo = cat(_out_io_din_bits_keep_WIRE_6[4], _out_io_din_bits_keep_WIRE_6[3]) @[DoCE.scala 121:76]
        node out_io_din_bits_keep_lo_hi_hi_2 = cat(_out_io_din_bits_keep_WIRE_6[6], _out_io_din_bits_keep_WIRE_6[5]) @[DoCE.scala 121:76]
        node out_io_din_bits_keep_lo_hi_4 = cat(out_io_din_bits_keep_lo_hi_hi_2, out_io_din_bits_keep_lo_hi_lo) @[DoCE.scala 121:76]
        node out_io_din_bits_keep_lo_5 = cat(out_io_din_bits_keep_lo_hi_4, out_io_din_bits_keep_lo_lo_3) @[DoCE.scala 121:76]
        node out_io_din_bits_keep_hi_lo_hi_1 = cat(_out_io_din_bits_keep_WIRE_6[9], _out_io_din_bits_keep_WIRE_6[8]) @[DoCE.scala 121:76]
        node out_io_din_bits_keep_hi_lo_3 = cat(out_io_din_bits_keep_hi_lo_hi_1, _out_io_din_bits_keep_WIRE_6[7]) @[DoCE.scala 121:76]
        node out_io_din_bits_keep_hi_hi_lo = cat(_out_io_din_bits_keep_WIRE_6[11], _out_io_din_bits_keep_WIRE_6[10]) @[DoCE.scala 121:76]
        node out_io_din_bits_keep_hi_hi_hi_2 = cat(_out_io_din_bits_keep_WIRE_6[13], _out_io_din_bits_keep_WIRE_6[12]) @[DoCE.scala 121:76]
        node out_io_din_bits_keep_hi_hi_4 = cat(out_io_din_bits_keep_hi_hi_hi_2, out_io_din_bits_keep_hi_hi_lo) @[DoCE.scala 121:76]
        node out_io_din_bits_keep_hi_5 = cat(out_io_din_bits_keep_hi_hi_4, out_io_din_bits_keep_hi_lo_3) @[DoCE.scala 121:76]
        node _out_io_din_bits_keep_T_6 = cat(out_io_din_bits_keep_hi_5, out_io_din_bits_keep_lo_5) @[DoCE.scala 121:76]
        out.io.din.bits.keep <= _out_io_din_bits_keep_T_6 @[DoCE.scala 121:32]
        skip @[DoCE.scala 117:23]
      else : @[DoCE.scala 122:39]
        when io.w_channel.valid : @[DoCE.scala 122:39]
          out.io.din.valid <= UInt<1>("h01") @[DoCE.scala 123:28]
          node out_io_din_bits_dout_hi_6 = bits(io.w_channel.bits.w, 15, 0) @[DoCE.scala 124:58]
          node out_io_din_bits_dout_lo_6 = bits(mid.w, 143, 32) @[DoCE.scala 124:88]
          node _out_io_din_bits_dout_T_14 = cat(out_io_din_bits_dout_hi_6, out_io_din_bits_dout_lo_6) @[Cat.scala 30:58]
          out.io.din.bits.dout <= _out_io_din_bits_dout_T_14 @[DoCE.scala 124:32]
          out.io.din.bits.last <= UInt<1>("h00") @[DoCE.scala 125:32]
          out.io.din.bits.keep <= UInt<16>("h0ffff") @[DoCE.scala 126:32]
          io.w_channel.ready <= out.io.din.ready @[DoCE.scala 127:30]
          skip @[DoCE.scala 122:39]
      skip @[DoCE.scala 93:23]
    node _T_19 = eq(left, UInt<8>("h080")) @[DoCE.scala 93:15]
    when _T_19 : @[DoCE.scala 93:23]
      out.io.din.valid <= UInt<1>("h01") @[DoCE.scala 130:26]
      node _out_io_din_bits_dout_T_15 = bits(mid.w, 143, 16) @[DoCE.scala 131:38]
      out.io.din.bits.dout <= _out_io_din_bits_dout_T_15 @[DoCE.scala 131:30]
      out.io.din.bits.last <= UInt<1>("h00") @[DoCE.scala 132:30]
      out.io.din.bits.keep <= UInt<16>("h0ffff") @[DoCE.scala 133:30]
      skip @[DoCE.scala 93:23]
    node _T_20 = eq(left, UInt<8>("h090")) @[DoCE.scala 93:15]
    when _T_20 : @[DoCE.scala 93:23]
      out.io.din.valid <= UInt<1>("h01") @[DoCE.scala 130:26]
      node _out_io_din_bits_dout_T_16 = bits(mid.w, 127, 0) @[DoCE.scala 131:38]
      out.io.din.bits.dout <= _out_io_din_bits_dout_T_16 @[DoCE.scala 131:30]
      out.io.din.bits.last <= UInt<1>("h00") @[DoCE.scala 132:30]
      out.io.din.bits.keep <= UInt<16>("h0ffff") @[DoCE.scala 133:30]
      skip @[DoCE.scala 93:23]
    
